name: Cleanup Stale Branches

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"  # Runs every day at 2 AM UTC

jobs:
  identify-and-delete:
    runs-on: ubuntu-latest
    env:
      GIT_CLI_TOKEN: ${{ secrets.GIT_CLI_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Step 1 - Identify and Delete Stale Branches
        id: cleanup
        run: |
          set -e

          REPO="${{ github.repository }}"
          PROTECTED_BRANCHES=("main" "master" "develop")
          STALE_DAYS=1
          TODAY=$(date -u +%s)
          HEADERS=(-H "Authorization: token $GIT_CLI_TOKEN" -H "Accept: application/vnd.github+json")

          echo "Branch,Email,DeletedOn" > deleted_branches.csv

          BRANCHES=$(curl -s "${HEADERS[@]}" "https://api.github.com/repos/${REPO}/branches")

          echo "$BRANCHES" | jq -c '.[]' | while read -r branch; do
            NAME=$(echo "$branch" | jq -r '.name')
            if [[ " ${PROTECTED_BRANCHES[*]} " =~ " ${NAME} " ]]; then
              continue
            fi

            SHA=$(echo "$branch" | jq -r '.commit.sha')
            COMMIT_DATA=$(curl -s "${HEADERS[@]}" "https://api.github.com/repos/${REPO}/commits/${SHA}")
            EMAIL=$(echo "$COMMIT_DATA" | jq -r '.commit.author.email')
            DATE_STR=$(echo "$COMMIT_DATA" | jq -r '.commit.author.date')

            if [ -z "$EMAIL" ] || [ -z "$DATE_STR" ]; then
              continue
            fi

            COMMIT_DATE=$(date -d "$DATE_STR" +%s)
            AGE_DAYS=$(( (TODAY - COMMIT_DATE) / 86400 ))

            if [ "$AGE_DAYS" -gt "$STALE_DAYS" ]; then
              DELETE_URL="https://api.github.com/repos/${REPO}/git/refs/heads/${NAME}"
              RESP_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE "${HEADERS[@]}" "$DELETE_URL")
              if [ "$RESP_CODE" = "204" ]; then
                echo "$NAME,$EMAIL,$(date -u +%Y-%m-%d)" >> deleted_branches.csv
              fi
            fi
          done

      - name: Step 2 - Upload Deleted Branch Report
        uses: actions/upload-artifact@v4
        with:
          name: deleted-branches
          path: deleted_branches.csv

      - name: Step 3 - Extract recipient emails from deleted_branches.csv
        id: extract-emails
        run: |
            if [ ! -f "deleted_branches.csv" ]; then
              echo "ðŸ“„ No deleted_branches.csv file found."
              echo "emails=" >> $GITHUB_OUTPUT
              exit 0
            fi
  
            emails=$(awk -F',' 'NF >= 2 {print $2}' deleted_branches.csv | sort | uniq | paste -sd "," -)
  
            echo "ðŸ“§ Emails to notify: $emails"
            echo "emails=$emails" >> $GITHUB_OUTPUT
  
      - name: Send Email using Gmail SMTP
        uses: dawidd6/action-send-mail@v3
        with:
             server_address: smtp.gmail.com
             server_port: 587
             username: kirantatti2803@gmail.com
             password: ${{ secrets.GMAIL_APP_PASSWORD }}
             subject: "[GitHub] Stale Branches Deleted"
             body: |
               Hi Team,
   
               Your stale branches (older than 90 days) have been deleted from the repository: ${{ github.repository }}.
   
               Regards,
               DevSecOps Bot
             to: pnayak060331@gmail.com
             cc: kirantatti2803@gmail.com
             from: "GitHub Bot <${{ secrets.GMAIL_USERNAME }}>"
             attachments: deleted_branches.csv
  
