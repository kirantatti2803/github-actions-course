name: Notify and Delete Stale Branches

on:
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight
  workflow_dispatch:  # Allows manual trigger

jobs:
  stale-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: sudo apt-get install -y jq curl

      - name: Find Stale Branches and Notify Owners
        env:
          GITHUB_TOKEN: ${{ vars.GIT_CLI_TOKEN }}
          SMTP_SERVER: "smtp.gmail.com"
          SMTP_PORT: "587"
          EMAIL_SENDER: "no-reply-github-bot@gmail.com"
          EMAIL_PASSWORD: ${{ vars.EMAIL_PASSWORD }}
        run: |
            #!/bin/bash

            REPO="${{ github.repository }}"
            STALE_DAYS=60
            GRACE_PERIOD=7
            TODAY=$(date +%s)

            echo "Fetching branches from $REPO..."
            BRANCHES=$(gh api repos/$REPO/branches --jq '.[] | {name: .name, date: .commit.commit.author.date, author: .commit.commit.author.name}')

            echo "$BRANCHES" | while IFS= read -r branch; do
                NAME=$(echo "$branch" | jq -r '.name')
                LAST_COMMIT_DATE=$(echo "$branch" | jq -r '.date')
                AUTHOR=$(echo "$branch" | jq -r '.author')

                # Skip protected branches
                if [[ "$NAME" == "main" || "$NAME" == "develop" ]]; then
                    echo "Skipping protected branch: $NAME"
                    continue
                fi

                # Check if commit date is null
                if [[ "$LAST_COMMIT_DATE" == "null" || -z "$LAST_COMMIT_DATE" ]]; then
                    echo "⚠️ Skipping branch '$NAME' due to missing commit date."
                    continue
                fi

                # Convert commit date to timestamp
                COMMIT_TIMESTAMP=$(date -d "$LAST_COMMIT_DATE" +%s 2>/dev/null)
                if [[ -z "$COMMIT_TIMESTAMP" ]]; then
                    echo "⚠️ Invalid date format for branch '$NAME'. Skipping..."
                    continue
                fi

                AGE=$(( (TODAY - COMMIT_TIMESTAMP) / 86400 ))

                if [[ $AGE -gt $STALE_DAYS ]]; then
                    echo "Branch '$NAME' is $AGE days old. Looking up email for '$AUTHOR'..."
                    EMAIL=$(gh api users/$AUTHOR --jq '.email')

                    if [[ -z "$EMAIL" || "$EMAIL" == "null" ]]; then
                        echo "⚠️ No valid email found for $AUTHOR. Skipping email notification."
                        continue
                    fi

                    echo "Notifying $EMAIL about stale branch '$NAME'..."
                    SUBJECT="⚠️ Stale Branch Warning: '$NAME' in $REPO"
                    MESSAGE="Hi $AUTHOR,\n\nThe branch '$NAME' in repository '$REPO' has been inactive for $AGE days.\nIf no activity occurs within the next $GRACE_PERIOD days, the branch will be deleted.\n\nPlease update or delete the branch if it's no longer needed.\n\nThanks,\nGitHub Admin"

                    curl --url "smtp://$SMTP_SERVER:$SMTP_PORT" --ssl-reqd \
                        --mail-from "$EMAIL_SENDER" --mail-rcpt "$EMAIL" \
                        --user "$EMAIL_SENDER:$EMAIL_PASSWORD" \
                        -T <(echo -e "From: GitHub Admin <$EMAIL_SENDER>\nTo: $EMAIL\nSubject: $SUBJECT\n\n$MESSAGE")

                    echo "$NAME,$EMAIL,$((TODAY + (GRACE_PERIOD * 86400)))" >> stale_branches.csv
                fi
            done
