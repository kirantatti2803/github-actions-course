name: Notify Stale Branches

on:
  schedule:
    - cron: '0 3 * * 1' # Runs every Monday at 3 AM UTC
  workflow_dispatch: # Allows manual trigger

jobs:
  notify-branch-owners:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt update && sudo apt install -y gh

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ vars.GIT_CLI_TOKEN }}
        run: |
          gh auth login --with-token <<< "$GH_TOKEN"

      - name: Identify stale branches & notify owners
        env:
          GH_TOKEN: ${{ vars.GIT_CLI_TOKEN }}
        run: |
          DAYS_OLD=30
          GRACE_PERIOD=7
          NOTIFIED_BRANCHES=()

          for BRANCH in $(gh repo list-branches --json name,lastCommit --jq '.[] | select(.name | IN("main","develop") | not) | select(.lastCommit.committedDate < (now - (60*60*24*'"$DAYS_OLD"'))) | .name'); do
            PR_COUNT=$(gh pr list --state open --head "$BRANCH" --json id --jq 'length')

            if [[ $PR_COUNT -eq 0 ]]; then
              OWNER_EMAIL=$(gh api repos/${{ github.repository }}/branches/$BRANCH | jq -r '.commit.author.email')
              NOTIFIED_BRANCHES+=("$BRANCH")

              echo "Notifying owner of branch: $BRANCH ($OWNER_EMAIL)"
              echo "$BRANCH,$OWNER_EMAIL" >> stale_branches.csv
            fi
          done

          if [[ ${#NOTIFIED_BRANCHES[@]} -gt 0 ]]; then
            echo "Stale branches found, sending notifications..."
          else
            echo "No stale branches found, skipping notifications."
          fi