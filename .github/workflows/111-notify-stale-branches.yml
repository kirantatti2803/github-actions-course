name: Notify Stale Branches

on:
  schedule:
    - cron: '0 9 * * *' # Runs every day at 9 AM UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  notify-stale-branches:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq mailutils

      - name: Find Stale Branches and Notify Owners
        GITHUB_TOKEN: ${{ secrets.GITHUB_CLI_TOKEN }}
        EMAIL_SENDER: "your-email@example.com"
        run: |
          REPO="${{ github.repository }}"
          DAYS_OLD=60
          TODAY=$(date +%s)

          echo "Fetching branches from $REPO..."
          BRANCHES=$(gh api repos/$REPO/branches --jq '.[] | {name: .name, date: .commit.commit.author.date, user: .commit.commit.author.email}')

          echo "$BRANCHES" | while IFS= read -r branch; do
              NAME=$(echo "$branch" | jq -r '.name')
              LAST_COMMIT_DATE=$(echo "$branch" | jq -r '.date')
              EMAIL=$(echo "$branch" | jq -r '.user')

              if [[ "$LAST_COMMIT_DATE" == "null" || "$EMAIL" == "null" ]]; then
                  echo "Skipping branch $NAME due to missing data."
                  continue
              fi

              # Convert commit date to timestamp
              COMMIT_TIMESTAMP=$(date -d "$LAST_COMMIT_DATE" +%s)
              AGE=$(( (TODAY - COMMIT_TIMESTAMP) / 86400 ))

              if [[ $AGE -gt $DAYS_OLD ]]; then
                  echo "Branch '$NAME' is $AGE days old. Sending notification to $EMAIL..."

                  # Send email notification using 'mail'
                  SUBJECT="Stale branch '$NAME' in $REPO"
                  MESSAGE="Hi,\n\nThe branch '$NAME' in repository '$REPO' has been inactive for $AGE days.\nPlease review or delete it if no longer needed.\n\nThanks,\nGitHub Admin"
                  
                  echo -e "$MESSAGE" | mail -s "$SUBJECT" "$EMAIL"
              fi
          done
